{"version":3,"sources":["components/Filter.js","components/ContactForm.js","components/ListDisplay.js","components/Notification.js","services/contacts.js","App.js","index.js"],"names":["Filter","submitHandler","filterValue","contactsToDisplay","onSubmit","value","onChange","ContactForm","name","number","nameChangeHandler","numberChangeHandler","type","ListDisplay","list","handleDelete","map","person","onClick","Notification","msg","notificationStyle","backgroundColor","width","padding","borderRadius","color","style","baseUrl","contactService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","del","delete","App","useState","persons","setPersons","newName","setNewName","newNameFilter","setNewNameFilter","newNumber","setNewNumber","personsToDisplay","setPersonsToDisplay","message","setMessage","useEffect","fetchedContacts","body","e","preventDefault","filter","toLowerCase","includes","target","contactExists","find","contact","window","confirm","updatedContact","newPersons","setTimeout","catch","err","updateContact","concat","updatedPersonsList","p","res","ReactDOM","render","document","getElementById"],"mappings":"2KAaeA,EAXA,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,kBACzC,OACI,qCACI,kDACA,sBAAMC,SAAUH,EAAhB,SACI,uBAAOI,MAAOH,EAAaI,SAAUH,UCgBtCI,EArBK,SAAC,GAKS,IAJ1BN,EAIyB,EAJzBA,cACAO,EAGyB,EAHzBA,KACAC,EAEyB,EAFzBA,OACAC,EACyB,EADzBA,kBACAC,EAAyB,EAAzBA,oBACA,OACI,uBAAMP,SAAUH,EAAhB,UACI,yCACM,uBAAOI,MAAOG,EAAMF,SAAUI,OAEpC,2CACQ,uBAAOL,MAAOI,EAAQH,SAAUK,OAExC,8BACA,wBAAQC,KAAK,SAAb,uBCDGC,EAdK,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,aACxB,OACI,8BACKD,EAAKE,KAAI,SAAAC,GAAM,OACZ,8BACKA,EAAOT,KADZ,IACmBS,EAAOR,OACtB,wBAAQS,QAASH,EAAaE,GAA9B,sBAFIA,EAAOT,YCkBhBW,EAtBM,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,IAAKR,EAAU,EAAVA,KACxB,IAAKQ,EACD,OAAO,KAGX,IAAMC,EAAoB,CACtBC,gBAAiB,UACjBC,MAAO,QACPC,QAAS,OACTC,aAAc,MACdC,MAAO,SAKX,MAHa,UAATd,IACAS,EAAkBC,gBAAkB,WAGpC,qBAAKK,MAAON,EAAZ,SACI,4BAAID,O,gBCjBVQ,EAAU,6DAwBDC,EAFQ,CAAEC,OApBV,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBZC,OAflB,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAaJI,OAV1B,SAACC,EAAIH,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQIO,IALrC,SAACF,GAET,OADgBT,IAAMY,OAAN,UAAgBf,EAAhB,YAA2BY,IAC5BP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UC4H9BS,EA1IH,WACV,MAA+BC,mBAAS,IAAxC,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAA4CJ,mBAAS,IAArD,mBAAQK,EAAR,KAAuBC,EAAvB,KACA,EAAoCN,mBAAS,GAA7C,mBAAQO,EAAR,KAAmBC,EAAnB,KACA,EAAkDR,mBAAS,IAA3D,mBAAQS,EAAR,KAA0BC,EAA1B,KACA,EAAgCV,mBAAS,IAAzC,mBAAQW,EAAR,KAAiBC,EAAjB,KAEAC,qBAAU,WACR7B,EACGC,SACAG,MAAK,SAAA0B,GACJZ,EAAWY,GACXJ,EAAoBI,QAEvB,IAgGH,OACE,cADO,CACP,iBACE,2CACA,cAAC,EAAD,CAAcvC,IAAKoC,EAAQI,KAAMhD,KAAM4C,EAAQ5C,OAC/C,cAAC,EAAD,CACEX,cA/BgB,SAAC4D,GACrBA,EAAEC,iBACF,IAAMR,EAAmBR,EAAQiB,QAC/B,SAAA9C,GAAM,OAAIA,EAAOT,KAAKwD,cAAcC,SAClCf,EAAcc,kBAGlBT,EAAoBD,IAyBhBpD,YAAagD,EACb/C,kBArCuB,SAAC0D,GAC5BA,EAAEC,iBACFX,EAAiBU,EAAEK,OAAO7D,UAsCxB,cAAC,EAAD,CACEJ,cA3DU,SAAC4D,GACfA,EAAEC,iBACF,IAvC4B3B,EAuCtB3B,EAAO,CACXA,KAAMwC,EACNvC,OAAQ2C,GAEJe,EAAgBrB,EAAQsB,MAC9B,SAAAnD,GAAM,OAAIA,EAAOT,OAASA,EAAKA,QAE/B2D,EArCoB,SAACE,GACrB,GAAIC,OAAOC,QAAP,UAAkBF,EAAQ7D,KAA1B,2EAAyG,CAC3G,IAAMgE,EAAc,2BAAQH,GAAR,IAAiB5D,OAAQ2C,IAC7CvB,EACGU,OAAO8B,EAAQ7B,GAAIgC,GACnBvC,MACC,SAAAC,GACE,IAAIuC,EAAa3B,EAAQ9B,KAAI,SAAAC,GAAM,OAAIA,EAAOuB,KAAO6B,EAAQ7B,GAAKvB,EAASiB,KAC3Ea,EAAW0B,GACXlB,EAAoBkB,GACpBpB,EAAa,GACbI,EAAW,CAACG,KAAK,+BAAgChD,KAAK,KACtD8D,YAAW,WACTjB,EAAW,MACV,QAGNkB,OACC,SAAAC,GACEnB,EAAW,CAACG,KAAK,kBAAD,OAAmBS,EAAQ7D,KAA3B,yCAAwEI,KAAK,UAC7F8D,YAAW,WACTjB,EAAW,MACV,SAeKoB,CAAcV,IA9CFhC,EA+CL3B,EA9CvBqB,EACGO,OAAOD,GACPF,MAAK,SAAAC,GACJa,EAAWD,EAAQgC,OAAO5C,IAC1BqB,EAAoBT,EAAQgC,OAAO5C,QA2CvCe,EAAW,IACXQ,EAAW,CAACG,KAAK,6BAA8BhD,KAAK,KACpD8D,YAAW,WACTjB,EAAW,MACV,MA6CCjD,KAAMwC,EACNvC,OAAQ2C,EACR1C,kBA5Ga,SAACmD,GAClBA,EAAEC,iBACFb,EAAWY,EAAEK,OAAO7D,QA2GhBM,oBAzGe,SAACkD,GACpBA,EAAEC,iBACFT,EAAaQ,EAAEK,OAAO7D,UAyGpB,yCACA,cAAC,EAAD,CACES,KAAMwC,EACNvC,aArCe,SAACE,GAAD,OAAY,WAC/B,IAAM8D,EAAqBjC,EAAQiB,QAAO,SAAAiB,GAAC,OAAIA,EAAExC,KAAOvB,EAAOuB,MAC3D8B,OAAOC,QAAP,iBAAyBtD,EAAOT,KAAhC,OACAqB,EACKa,IAAIzB,EAAOuB,IACXP,MAAK,SAAAgD,GACJlC,EAAWgC,GACXxB,EAAoBwB,GACpBtB,EAAW,CAACG,KAAK,+BAAgChD,KAAK,KACtD8D,YAAW,WACTjB,EAAW,MACV,gBC7GjByB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1b0f8a94.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({submitHandler, filterValue, contactsToDisplay}) => {\n    return (\n        <>\n            <p>filter shown with</p>\n            <form onSubmit={submitHandler}>\n                <input value={filterValue} onChange={contactsToDisplay} />\n            </form>\n        </>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst ContactForm = ({\n    submitHandler, \n    name, \n    number, \n    nameChangeHandler, \n    numberChangeHandler}) => {\n    return (\n        <form onSubmit={submitHandler}>\n            <div>\n            name: <input value={name} onChange={nameChangeHandler} />\n            </div>\n            <div>\n            number: <input value={number} onChange={numberChangeHandler} />\n            </div>\n            <div>\n            <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default ContactForm","import React from 'react'\n\nconst ListDisplay = ({list, handleDelete}) => {\n    return (\n        <div>\n            {list.map(person => \n                <p key={person.name}>\n                    {person.name} {person.number}\n                    <button onClick={handleDelete(person)}>delete</button>\n                </p>\n                )\n            }\n        </div>\n    )\n}\n\nexport default ListDisplay","import React from 'react'\n\nconst Notification = ({msg, type}) => {\n    if (!msg) {\n        return null\n    }\n    \n    const notificationStyle = {\n        backgroundColor: '#5cb85c',\n        width: '400px',\n        padding: '10px',\n        borderRadius: '8px',\n        color: 'white'\n    }\n    if (type === 'error') {\n        notificationStyle.backgroundColor = '#d9534f'\n    }\n    return (\n        <div style={notificationStyle}>\n            <p>{msg}</p>\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = 'https://murmuring-mountain-11390.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst del = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst contactService = { getAll, create, update, del }\n\nexport default contactService","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport ContactForm from './components/ContactForm'\nimport ListDisplay from './components/ListDisplay'\nimport Notification from './components/Notification'\nimport contactService from './services/contacts'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNameFilter, setNewNameFilter ] = useState('')\n  const [ newNumber, setNewNumber ] = useState(0)\n  const [ personsToDisplay, setPersonsToDisplay ] = useState([])\n  const [ message, setMessage ] = useState({})\n  \n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(fetchedContacts => {\n        setPersons(fetchedContacts)\n        setPersonsToDisplay(fetchedContacts)\n        })\n  }, [])\n\n  const nameChange = (e) => {\n    e.preventDefault()\n    setNewName(e.target.value)\n  }\n  const numberChange = (e) => {\n    e.preventDefault()\n    setNewNumber(e.target.value)\n  }\n\n  const setPersonsAndDisplay = (data) => {\n    contactService\n      .create(data)\n      .then(response => {\n        setPersons(persons.concat(response))\n        setPersonsToDisplay(persons.concat(response))\n      })\n  }\n\n  const updateContact = (contact) => {\n    if (window.confirm(`${contact.name} is already added to phonebook, replace the old number with a new one?`)) {\n      const updatedContact = { ...contact, number: newNumber }\n      contactService\n        .update(contact.id, updatedContact)\n        .then(\n          response => {\n            let newPersons = persons.map(person => person.id !== contact.id ? person : response)\n            setPersons(newPersons)\n            setPersonsToDisplay(newPersons)\n            setNewNumber(0)\n            setMessage({body:\"Contact updated successfully\", type:''})\n            setTimeout(() => {\n              setMessage({})\n            }, 3000)\n          }\n        )\n        .catch(\n          err => {\n            setMessage({body:`Information of ${contact.name} has already been removed from server`, type:'error'})\n            setTimeout(() => {\n              setMessage({})\n            }, 3000)\n          }\n        )\n    }\n  }\n\n  const addName = (e) => {\n    e.preventDefault()\n    const name = {\n      name: newName,\n      number: newNumber\n    }\n    const contactExists = persons.find(\n    person => person.name === name.name)\n\n    contactExists ? updateContact(contactExists)\n    : setPersonsAndDisplay(name)\n    setNewName('')\n    setMessage({body:\"Contact added successfully\", type:''})\n    setTimeout(() => {\n      setMessage({})\n    }, 3000)\n    \n  }\n  const setContactsToDisplay = (e) => {\n    e.preventDefault()\n    setNewNameFilter(e.target.value)\n  }\n  const filterResults = (e) => {\n    e.preventDefault()\n    const personsToDisplay = persons.filter(\n      person => person.name.toLowerCase().includes(\n        newNameFilter.toLowerCase()\n      )\n    )\n    setPersonsToDisplay(personsToDisplay)\n  }\n  const handleDelete = (person) => () => {\n    const updatedPersonsList = persons.filter(p => p.id !== person.id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n        contactService\n            .del(person.id)\n            .then(res => {\n              setPersons(updatedPersonsList)\n              setPersonsToDisplay(updatedPersonsList)\n              setMessage({body:\"Contact deleted successfully\", type:''})\n              setTimeout(() => {\n                setMessage({})\n              }, 3000)\n              })\n    }\n    \n}\n\n  return ( // error #d9534f success #5cb85c\n    <div>\n      <h2>Phonebook</h2>\n      <Notification msg={message.body} type={message.type} />\n      <Filter \n        submitHandler={filterResults} \n        filterValue={newNameFilter} \n        contactsToDisplay={setContactsToDisplay} \n      />\n\n      <ContactForm \n        submitHandler={addName}\n        name={newName}\n        number={newNumber}\n        nameChangeHandler={nameChange}\n        numberChangeHandler={numberChange}\n      />\n      <h2>Numbers</h2>\n      <ListDisplay \n        list={personsToDisplay} \n        handleDelete={handleDelete}\n      />\n    </div>\n  )\n\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}